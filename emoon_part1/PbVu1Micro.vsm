;////////////////////////////////////////////////////////////////////////////////////////
;//
;// Note that this code is highly unoptimized, but might be useful to learn from or so.
;//

iScreenMatrix   = 0
iCameraMatrix   = 4
vfAngles        = 8

iGiftag         = 0
vfData          = 1

.global         g_PbVu1_FlatSimple
.global         g_PbVu1_FlatSimple_End
.global         g_PbVu1_Envmap
.global         g_PbVu1_Envmap_End

                .p2align 4  ; This aligns the following data to quadword alignment
                .vu

g_PbVu1_FlatSimple:
                nop                             xtop        vi14
                                
                nop                             lq          vf28, iScreenMatrix+0(vi00)
                nop                             lq          vf29, iScreenMatrix+1(vi00)
                nop                             lq          vf30, iScreenMatrix+2(vi00)
                nop                             lq          vf31, iScreenMatrix+3(vi00)

                nop                             lq          vf24, iCameraMatrix+0(vi00)
                nop                             lq          vf25, iCameraMatrix+1(vi00)
                nop                             lq          vf26, iCameraMatrix+2(vi00)
                nop                             lq          vf27, iCameraMatrix+3(vi00)
                                                
                nop                             lq          vf22, vfAngles(vi00)    ; h,p,b,rate
                
                nop                             iaddiu      vi02, vi14, 246         ; 
                nop                             iaddiu      vi03, vi14, 246         ; xgkick adree
                nop                             iaddiu      vi01, vi14, vfData      ; coord adress
                
                nop                             lq.xyzw     vf06, iGiftag(vi14)     ; giftag
                nop                             sqi.xyzw    vf06, (vi02++)          ; store the giftag
                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Get the lower part of the viftag to see how many coords we ill draw
                
                ;//nop                             iaddiu      vi13, vi14, 4
                ;//nop                             ilwr.w      vi06, (vi13)w
                ;//nop                             iaddiu      vi13, vi00, 0x3ff
                ;//nop                             iand        vi05, vi05, vi13
                nop                             iaddiu      vi05, vi00, 112
                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Temporary for colors right now.
                                
                add.xyzw    vf06,vf00,vf00      loi 2.0
                addi        vf07,vf00,I         nop
poly_loop:      
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Temporary color stuff
                
                add.xyzw    vf06, vf06, vf07    nop
                ftoi0       vf08, vf06          loi         0.65
                
                sub         vf19, vf19, vf19    sqi         vf08, (vi02++)          ; store colors
                sub         vf09, vf09, vf09    lqi         vf05, (vi01++)          ; XYZ
                                                              
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Calculate distance to origo for the vertex 
                                
                mul        vf08,  vf05,  vf05   nop                     ; x*x , y*y, z*z ..
                addy.x     vf09x, vf08x, vf08y  nop                     ; x*x + y*y  
                addz.x     vf09x, vf08x, vf08z  loi 100.0               ; x*x + y*y + z*z
                addi.x     vf08x, vf00x, i      nop
                nop                             rsqrt q, vf08x, vf09x   ; sqrt(x*x + y*y + z*z)
                nop                             waitq
                addq.x     vf09x, vf00x, q      nop                     ; vf09x = distance
                mulw.x     vf09x, vf09x, vf22w  nop                     ; distance * lagrate
                mulx.x     vf19x, vf09x, vf22x  nop                     

                addx.x     vf19x, vf00x, vf22x  nop
                                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Calc the rotation angles from the lagrate and make identity y matrix
                
                mulz.w      vf19, vf00, vf19z   nop                     ; copy angle from z to w
                addx.y      vf19, vf00, vf19x   loi 1.570796            ; copy angle from x to y                                     
                subi.xz     vf19, vf19, i       nop                     ; phase difference for sin as cos ( pi/2 )
                abs         vf19, vf19          nop                     ; mirror cos around zero
                maxw        vf20, vf00, vf00w   loi -0.159155           ; initialise all 1s                                                                             
                mulai       acc,  vf19, i       loi 12582912.0          ; scale so single cycle is range 0 to -1 ( *-1/2pi )                                   
                msubai      acc,  vf20, i       nop                     ; apply bias to remove fractional part
                maddai      acc,  vf20, i       loi -0.159155           ; remove bias to leave original int part                                    
                msubai      acc,  vf19, i       loi 0.5                 ; apply original number to leave fraction range only                                             
                msubi       vf19, vf20, i       nop                     ; ajust range: -0.5 to +0.5
                abs         vf19, vf19          loi 0.25                ; clamp: 0 to +0.5                                         
                subi        vf19, vf19, i       nop                     ; ajust range: -0.25 to +0.25
                mul         vf21, vf19, vf19    loi -76.574959          ; a^2
                muli        vf14, vf19, i       loi -41.341675          ; k4 a   
                muli        vf16, vf19, i       loi 81.602226           ; k2 a
                muli        vf15, vf19, i       nop                     ; k3 a
                mul         vf18, vf21, vf21    nop                     ; a^4
                mul         vf14, vf24, vf21    nop                     ; k4 a^3
                mula        acc,  vf16, vf21    loi 39.710659           ; + k2 a^3                                    
                muli        vf16, vf19, i       nop                     ; k5 a
                mul         vf17, vf18, vf18    move vf13,vf00          ; a^8
                madda       acc,  vf14, vf18    mr32 vf12,vf13          ; + k4 a^7
                madda       acc,  vf15, vf18    loi 6.283185            ; + k3 a^5
                maddai      acc,  vf19, i       mr32 vf11,vf12          ; + k1 a
                madd        vf19, vf16, vf17    mr32 vf10,vf11          ; + k5 a^9
                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// setup sin/cos for y rotation matrix and creates idetity for x matrix                

                addy.x  vf10x, vf00x, vf19y     loi -1.0                ; cos_angle, 0, 0, 0
                addx.z  vf10z, vf00z, vf19x     move vf17,vf00          ; cos_angle, 0, sin_angle, 0
                muli.z  vf10z, vf10z, i         mr32 vf16,vf17          ; cos_angle, 0, -sin_angle, 0

                addx.x  vf12x, vf00x, vf19x     mr32 vf15,vf16          ; sin_angle, 0, 0, 0
                addy.z  vf12z, vf00z, vf19y     mr32 vf14,vf15          ; sin_angle, 0, cos_angle, 0

                ;//////////////////////////////////////////////////////////////////////////////////
                ;// setup sin/cos for x rotation matrix               

                addy.y  vf16y, vf00y, vf19y     loi -1.0                ; 0, cos_angle, 0, 0
                addx.z  vf16z, vf00z, vf19x     nop                     ; 0, cos_angle, sin_angle, 0

                addx.y  vf15y, vf00y, vf19x     nop                     ; 0,  sin_angle, 0, 0
                muli.y  vf15y, vf15y, i         nop                     ; 0, -sin_angle, 0, 0
                addy.z  vf15z, vf00z, vf19y     nop                     ; 0,  -sin_angle, cos_angle, 0

                ;///////////////////////////////////////////////////////////////////////////////////
                ;// Calculate Local Y * Local X

                mulax     acc,  vf10, vf14      nop
                madday    acc,  vf11, vf14      nop
                maddaz    acc,  vf12, vf14      nop
                maddw     vf18, vf13, vf14      nop
                
                mulax     acc,  vf10, vf15      nop
                madday    acc,  vf11, vf15      nop
                maddaz    acc,  vf12, vf15      nop
                maddw     vf19, vf13, vf15      nop
                
                mulax     acc,  vf10, vf16      nop
                madday    acc,  vf11, vf16      nop
                maddaz    acc,  vf12, vf16      nop
                maddw     vf20, vf13, vf16      nop
                
                mulax     acc,  vf10, vf17      nop
                madday    acc,  vf11, vf17      nop
                maddaz    acc,  vf12, vf17      nop
                maddw     vf21, vf13, vf17      nop
                                
                ;///////////////////////////////////////////////////////////////////////////////////
                ;// Calculate Local Matrix * CameraMatrix

                mulax     acc,  vf24, vf18      nop
                madday    acc,  vf25, vf18      nop
                maddaz    acc,  vf26, vf18      nop
                maddw     vf14, vf27, vf18      nop
                
                mulax     acc,  vf24, vf19      nop
                madday    acc,  vf25, vf19      nop
                maddaz    acc,  vf26, vf19      nop
                maddw     vf15, vf27, vf19      nop
                
                mulax     acc,  vf24, vf20      nop
                madday    acc,  vf25, vf20      nop
                maddaz    acc,  vf26, vf20      nop
                maddw     vf16, vf27, vf20      nop
                
                mulax     acc,  vf24, vf21      nop
                madday    acc,  vf25, vf21      nop
                maddaz    acc,  vf26, vf21      nop
                maddw     vf17, vf27, vf21      nop
                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Calculate Screen * (Local * Camera)
                
                mulax     acc,  vf28, vf14      nop
                madday    acc,  vf29, vf14      nop
                maddaz    acc,  vf30, vf14      nop
                maddw     vf01, vf31, vf14      nop
                
                mulax     acc,  vf28, vf15      nop
                madday    acc,  vf29, vf15      nop
                maddaz    acc,  vf30, vf15      nop
                maddw     vf02, vf31, vf15      nop
                
                mulax     acc,  vf28, vf16      nop
                madday    acc,  vf29, vf16      nop
                maddaz    acc,  vf30, vf16      nop
                maddw     vf03, vf31, vf16      nop
                
                mulax     acc,  vf28, vf17      nop
                madday    acc,  vf29, vf17      nop
                maddaz    acc,  vf30, vf17      nop
                maddw     vf04, vf31, vf17      nop
                                
                ;//////////////////////////////////////////////////////////////////////////////////
                ;// Project vertex to screen space.
                                
                mulax     acc,  vf01, vf05x     nop                                 
                madday    acc,  vf02, vf05y     nop                                 
                maddaz    acc,  vf03, vf05z     nop                                 
                maddw     vf05, vf04, vf05w     nop                                 
                nop                             div         q, vf00w, vf05w         
                nop                             waitq                               
                mulq        vf05, vf05, q       nop                                 
                ftoi4       vf05, vf05          nop                                 ; fixedpoint for gif
                nop                             sqi         vf05, (vi02++)          ; store xyz
                nop                             iaddi       vi05, vi05, -1          ; 
                nop                             nop                                 ;
                nop                             ibne        vi05, vi00, poly_loop   ; loop check
                nop                             nop
                nop                             xgkick      vi03
                nop[e]                          nop
                nop                             nop
                                
g_PbVu1_FlatSimple_End:

;//////////////////////////////////////////////////////////////////////////////////////////////////
;//
;//
;//                
;//    
                
                
                .p2align 4  ; This aligns the following data to quadword alignment


g_PbVu1_Envmap:

                nop                             xtop        vi14
                                
                nop                             lq          vf28, 0(vi00)
                nop                             lq          vf29, 1(vi00)
                nop                             lq          vf30, 2(vi00)
                nop                             lq          vf31, 3(vi00)

                nop                             lq          vf24, 4(vi00)
                nop                             lq          vf25, 5(vi00)
                nop                             lq          vf26, 6(vi00)
                nop                             lq          vf27, 7(vi00)

                nop                             iaddiu      vi02, vi14, 246         ; 
                nop                             iaddiu      vi03, vi14, 246         ; xgkick adree
                nop                             iaddiu      vi01, vi14, vfData      ; coord adress
                
                nop                             lq.xyzw     vf06, iGiftag(vi14)     ; giftag
                nop                             sqi.xyzw    vf06, (vi02++)          ; store the giftag
                
                nop                             iaddiu      vi05, vi00, 80
                add.xyzw    vf06,vf00,vf00      loi 25.0
                addi        vf07,vf00,I         nop
t_loop:      
                add.xyzw    vf06, vf06, vf07    nop
                ftoi0       vf08, vf06          loi         1.0
                sub         vf10, vf10, vf10    lqi         vf05, (vi01++)          ; XYZ
                nop                             lqi         vf09, (vi01++)          ; Normal

                ;////////////////////////////////////////////////////////////////////////////////////////
                ;// Project point

                mulax     acc,  vf28, vf05x     nop                                 
                madday    acc,  vf29, vf05y     nop                                 
                maddaz    acc,  vf30, vf05z     nop                                 
                maddw     vf05, vf31, vf05w     nop                                 
                nop                             div         q, vf00w, vf05w         
                
                ;/////////////////////////////////////////////////////////////////////////////////////////
                ;// Rotate normal

                mulax     acc,   vf24, vf09x    nop                                 
                madday    acc,   vf25, vf09y    nop                                 
                maddaz    acc,   vf26, vf09z    nop                                 
                maddw     vf09,  vf27, vf09w    nop                                 
               
                ;/////////////////////////////////////////////////////////////////////////////////////////
                ;// trunc if negative
                
                nop                             sqi         vf10, (vi02++)
                nop                             waitq
                
                mulq      vf05, vf05, q         loi         127.0                                 
                ftoi4     vf05, vf05            nop                                 ; fixedpoint for gif
                
                muli      vf09,  vf09, i        nop
                addi.xy   vf09xy, vf09xy, i     nop
                ftoi4     vf09, vf09            nop
                nop                             sqi         vf09, (vi02++)
                nop                             sqi         vf05, (vi02++)          ; store xyz
                
                nop                             iaddi       vi05, vi05, -1          ; 
                nop                             nop                                 ;
                nop                             ibne        vi05, vi00, t_loop   ; loop check
                nop                             nop
                nop                             xgkick      vi03
                nop[e]                          nop
                nop                             nop

g_PbVu1_Envmap_End:

/*
                
                max.z     vf09z, vf00z, vf09z   nop
                addz.x    vf10x, vf00x, vf09z   loi         255.0        
                addz.y    vf10y, vf00y, vf09z   nop        
                addz.z    vf10z, vf00z, vf09z   nop        

                muli       vf10, vf10, i        nop
                ftoi0      vf10, vf10           nop                        
*/
